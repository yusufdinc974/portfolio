@use '../base/variables' as vars;

/* Pulsing animation */
@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Blinking animation */
@keyframes blink {
  0%, 100% { 
    opacity: 1; 
  }
  50% { 
    opacity: 0; 
  }
}

/* Data flow animation */
@keyframes dataFlow {
  0% {
    stroke-dashoffset: 1000;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

/* Glow animation */
@keyframes glow {
  0% {
    filter: drop-shadow(0 0 2px rgba(vars.$electric-blue, 0.5));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(vars.$electric-blue, 0.8));
  }
  100% {
    filter: drop-shadow(0 0 2px rgba(vars.$electric-blue, 0.5));
  }
}

/* Loading spinner animation */
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Fade in up animation */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Circuit connection animation */
@keyframes connectNodes {
  0% {
    stroke-dashoffset: 100%;
  }
  100% {
    stroke-dashoffset: 0%;
  }
}

/* Node pulse animation */
@keyframes nodePulse {
  0% {
    r: vars.$circuit-node-size;
    filter: drop-shadow(0 0 2px rgba(vars.$electric-blue, 0.5));
  }
  50% {
    r: calc(vars.$circuit-node-size * 1.3);
    filter: drop-shadow(0 0 6px rgba(vars.$electric-blue, 0.8));
  }
  100% {
    r: vars.$circuit-node-size;
    filter: drop-shadow(0 0 2px rgba(vars.$electric-blue, 0.5));
  }
}

/* Circuit scan animation */
@keyframes circuitScan {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 100%;
  }
}

/* Typing cursor blink */
@keyframes cursorBlink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}