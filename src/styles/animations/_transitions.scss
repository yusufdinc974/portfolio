@use '../base/variables' as vars;

/* Basic page transition */
.page-transition {
  &-enter {
    opacity: 0;
    transform: translateY(20px);
    
    &-active {
      opacity: 1;
      transform: translateY(0);
      transition: opacity vars.$transition-base, transform vars.$transition-base;
    }
  }
  
  &-exit {
    opacity: 1;
    transform: translateY(0);
    
    &-active {
      opacity: 0;
      transform: translateY(-20px);
      transition: opacity vars.$transition-base, transform vars.$transition-base;
    }
  }
}

/* Circuit path reveal transition */
.circuit-reveal {
  &-enter {
    stroke-dashoffset: 100%;
    
    &-active {
      stroke-dashoffset: 0%;
      transition: stroke-dashoffset 1.5s ease;
    }
  }
}

/* Modal transition */
.modal-transition {
  &-enter {
    opacity: 0;
    
    .modal-content {
      transform: scale(0.8);
    }
    
    &-active {
      opacity: 1;
      transition: opacity vars.$transition-base;
      
      .modal-content {
        transform: scale(1);
        transition: transform vars.$transition-base;
      }
    }
  }
  
  &-exit {
    opacity: 1;
    
    .modal-content {
      transform: scale(1);
    }
    
    &-active {
      opacity: 0;
      transition: opacity vars.$transition-base;
      
      .modal-content {
        transform: scale(0.8);
        transition: transform vars.$transition-base;
      }
    }
  }
}

/* Slide transition */
.slide-transition {
  &-enter {
    transform: translateX(100%);
    
    &-active {
      transform: translateX(0);
      transition: transform vars.$transition-base;
    }
  }
  
  &-exit {
    transform: translateX(0);
    
    &-active {
      transform: translateX(-100%);
      transition: transform vars.$transition-base;
    }
  }
}

/* Fade transition */
.fade-transition {
  &-enter {
    opacity: 0;
    
    &-active {
      opacity: 1;
      transition: opacity vars.$transition-base;
    }
  }
  
  &-exit {
    opacity: 1;
    
    &-active {
      opacity: 0;
      transition: opacity vars.$transition-base;
    }
  }
}

/* Circuit node reveal */
.node-reveal {
  &-enter {
    opacity: 0;
    transform: scale(0);
    
    &-active {
      opacity: 1;
      transform: scale(1);
      transition: opacity vars.$transition-base, transform vars.$transition-base;
    }
  }
}

/* Loading screen transition */
.loading-screen-exit {
  opacity: 1;
  
  &-active {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }
}